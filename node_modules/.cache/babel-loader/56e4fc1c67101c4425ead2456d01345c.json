{"ast":null,"code":"import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from \"./constants.js\";\nconst initialState = {\n  searchField: \"\"\n};\nexport const searchRobots = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, {\n        searchField: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nexport const requestRobots = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {\n        isPending: true\n      });\n  }\n};","map":{"version":3,"sources":["C:/Users/Akash/Desktop/WebDevelopment/ReactApp/akashfriends/roboFriends/src/reducers.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","initialState","searchField","searchRobots","state","action","type","Object","assign","payload","requestRobots","isPending"],"mappings":"AAAA,SACEA,mBADF,EAEEC,sBAFF,EAGEC,sBAHF,EAIEC,qBAJF,QAKO,gBALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAArB;AAIA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAM,GAAG,EAAhC,KAAuC;AACjE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,mBAAL;AACE,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEF,QAAAA,WAAW,EAAEG,MAAM,CAACI;AAAtB,OAAzB,CAAP;;AACF;AACE,aAAOL,KAAP;AAJJ;AAMD,CAPM;AASP,OAAO,MAAMM,aAAa,GAAG,CAACN,KAAK,GAAGH,YAAT,EAAuBI,MAAM,GAAG,EAAhC,KAAuC;AAClE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,sBAAL;AACE,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEO,QAAAA,SAAS,EAAE;AAAb,OAAzB,CAAP;AAFJ;AAID,CALM","sourcesContent":["import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED,\r\n} from \"./constants.js\";\r\n\r\nconst initialState = {\r\n  searchField: \"\",\r\n};\r\n\r\nexport const searchRobots = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return Object.assign({}, state, { searchField: action.payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const requestRobots = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case REQUEST_ROBOTS_PENDING:\r\n      return Object.assign({}, state, { isPending: true });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}